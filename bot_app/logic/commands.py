import threading
import re
import telegram
from flask import copy_current_request_context
from telegram import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup

from bot_app.configs.config import TOKEN
from bot_app.logic import thread_store
from bot_app.logic.logic import help_button

bot = telegram.Bot(TOKEN)


def print_command(chat_id, message):
    @copy_current_request_context
    def send_notification():
        bot.sendMessage(chat_id,
                        '–ü—Ä–æ–±–ª–µ–º—ã? –ñ–º–∏ /help ‚úåÔ∏èÔ∏è')

    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)]],
        resize_keyboard=True)

    timer = thread_store.link_store.get(chat_id)
    if timer is not None:
        timer.cancel()

    if message == '/start':
        help_button(chat_id, 'üì¢ –ü—Ä–∏–≤–µ—Ç!'
                        ' O—Ç–ø—Ä–∞–≤–ª—è–π –ª–æ–∫–∞—Ü–∏—é –∏–ª–∏ –≤—ã–±–∏—Ä–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏'
                             '—è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è —Ä—è–¥–æ–º –∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!üëá ')
        timer = threading.Timer(30, send_notification)
        thread_store.link_store[chat_id] = timer
        timer.start()
    elif message == '/help':
        help_button(chat_id, "–∂–º–∏ –∫–Ω–æ–ø–∫—É—É—É—É—É")
    else:
        return 1
    return 0


def print_off_location(chat_id):
    bot.sendMessage(chat_id, '–í–∫–ª—é—á–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é :)')
